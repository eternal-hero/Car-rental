{"version":3,"sources":["history.js","auth/FetchInterceptor.js","views/app-views/earnings/components/table.js","views/app-views/earnings/index.js"],"names":["history","service","axios","create","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","columns","title","dataIndex","key","Expand","props","antIcon","LoadingOutlined","style","fontSize","spin","useState","setData","eariningData","setEarningData","detailLoading","setDetailLoading","loading","setLoading","fetchProducts","params","fetch","url","method","then","resp","new_data","users","map","item","id","bank_name","iban","account_number","first_name","holder_name","last_name","phone_number","penalty_amount","earnings","getTableData","useEffect","undefined","startDate","searchText","page","dates","endDate","search","expandable","expandedRowRender","record","margin","className","indicator","index","justifyContent","padding","borderRadius","onExpand","expanded","console","log","trips","dataSource","DatePicker","RangePicker","Input","Search","Earning","selectDate","setStartDate","setEndDate","tableData","setTableData","moment","format","Fragment","type","icon","DownloadOutlined","onClick","doc","jsPDF","setFontSize","content","startY","head","body","text","autoTable","save","exportPDF"],"mappings":"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","file":"static/js/26.9249d9f4.chunk.js","sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\n// const TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst TOKEN_PAYLOAD_KEY = 'Authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = \"bearer \" + jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import React, { useState, useEffect } from \"react\";\r\nimport { Table } from 'antd';\r\nimport fetch from 'auth/FetchInterceptor';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst columns = [\r\n    { title: 'ID', dataIndex: 'id', key: 1 },\r\n    { title: 'Bank Name', dataIndex: 'bank_name', key: 2 },\r\n    { title: 'Iban', dataIndex: 'iban', key: 3 },\r\n    { title: 'Bank Number', dataIndex: 'account_number', key: 4 },\r\n    { title: 'First Name', dataIndex: 'first_name', key: 5 },\r\n    { title: 'Holder Name', dataIndex: 'holder_name', key: 6 },\r\n    { title: 'Last Name', dataIndex: 'last_name', key: 7 },\r\n    { title: 'Phone Number', dataIndex: 'phone_number', key: 8 },\r\n    { title: 'Penalty', dataIndex: 'penalty_amount', key: 9 },\r\n    { title: 'Earnings', dataIndex: 'earnings', key: 10 },\r\n];\r\n\r\n\r\n\r\nexport default function Expand(props) {\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n    const [data, setData] = useState([]);\r\n    const [eariningData, setEarningData] = useState({});\r\n    const [detailLoading, setDetailLoading] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const fetchProducts = (params) => {\r\n        setLoading(true);\r\n        fetch({\r\n            url: '/report/earners/get/all',\r\n            method: 'get',\r\n            headers: {\r\n                'public-request': 'true'\r\n            },\r\n            params\r\n        }).then((resp) => {\r\n            setLoading(false);\r\n            var data = [];\r\n            var new_data = {};\r\n            resp.data.users.map((item) => {\r\n                new_data = {\r\n                    key: item.id,\r\n                    id: item.id,\r\n                    bank_name: item.bank_name,\r\n                    iban: item.iban,\r\n                    account_number: item.account_number,\r\n                    first_name: item.first_name,\r\n                    holder_name: item.holder_name,\r\n                    last_name: item.last_name,\r\n                    phone_number: item.phone_number,\r\n                    penalty_amount: item.penalty_amount,\r\n                    earnings: item.earnings\r\n                }\r\n                data.push(new_data);\r\n            })\r\n            setData(data);\r\n            props.getTableData(data);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.startDate === undefined || props.searchText === undefined)\r\n            fetchProducts({ page: 1 });\r\n        else\r\n            fetchProducts({ page: 1, dates: props.startDate + \",\" + props.endDate, search: props.searchText });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (props.startDate === undefined)\r\n            fetchProducts({ page: 1 });\r\n        else\r\n            fetchProducts({ page: 1, dates: props.startDate + \",\" + props.endDate, search: props.searchText });\r\n    }, [props.startDate, props.endDate, props.searchText]);\r\n\r\n    useEffect(() => {\r\n        fetchProducts({ page: 1 });\r\n    }, []);\r\n\r\n    const handleEarning = (id) => {\r\n\r\n        fetch({\r\n            url: '/report/earners/' + id,\r\n            method: 'get',\r\n            headers: {\r\n                'public-request': 'true'\r\n            },\r\n        }).then((resp) => {\r\n            setDetailLoading(false);\r\n            console.log(resp);\r\n            console.log(resp.trips);\r\n            // ({ ...images, [key]: resp.images });\r\n            setEarningData({ ...eariningData, [id]: resp.trips });\r\n        })\r\n    }\r\n    // console.log(eariningData);\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            expandable={{\r\n                expandedRowRender: record =>\r\n                    <div style={{ margin: 0 }}>\r\n                        <div>\r\n                            <div className=\"earing_detail_body\">\r\n                                {detailLoading && <Spin indicator={antIcon} />}\r\n                                {record.id in eariningData && eariningData[record.id].map((item, index) => {\r\n                                    return <div key={index} className=\"earing_detail\" style={{ justifyContent: 'space-between', padding: '10px 20px' }}>\r\n                                        <div className=\"earing_detail\">\r\n                                            <div>trip ID</div>\r\n                                            <div key={index}>{item.id}</div>\r\n                                        </div>\r\n                                        <div className=\"earing_detail\">\r\n                                            <div>Owner Earings</div>\r\n                                            <div key={index}>{item.id}</div>\r\n                                        </div>\r\n                                        <div className=\"earing_detail\">\r\n                                            <button style={{ padding: '5px 40px', borderRadius: 5 }}>Unpayed</button>\r\n                                        </div>\r\n                                    </div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>,\r\n                onExpand: (expanded, record) => {\r\n\r\n                    if (expanded == true) {\r\n                        setDetailLoading(true)\r\n                        handleEarning(record.id);\r\n                    }\r\n                }\r\n            }}\r\n            dataSource={data}\r\n            loading={loading}\r\n        />\r\n    );\r\n\r\n}\r\n","import React, {useEffect, useState}from 'react';\r\nimport { Button, DatePicker, Input } from \"antd\";\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nimport Table from './components/table';\r\nimport '../custom.css';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Search } = Input;\r\n\r\nconst Earning = () => {\r\n\tconst [selectDate, setSelectDate] = useState(null);\r\n\tconst [startDate, setStartDate] = useState();\r\n\tconst [endDate, setEndDate] = useState();\r\n\tconst [searchText, setSearchText] = useState();\r\n\tconst [tableData, setTableData]=useState([])\r\n\r\n\tuseEffect(()=> {\r\n\t\tif(selectDate === null) {\r\n\t\t\tsetStartDate(\"1900-01-01\");\r\n\t\t\tsetEndDate(\"2999-01-01\");\r\n\t\t} else {\r\n\t\t\tsetStartDate(moment(selectDate[0]).format(\"YYYY-MM-DD\"));\r\n\t\t\tsetEndDate(moment(selectDate[1]).format(\"YYYY-MM-DD\"));\r\n\t\t}\r\n\t}, [selectDate]);\r\n\tconst getTableData=(data)=>{\r\n\t\tsetTableData(data);\r\n\t}\r\n\r\n\tconst exportPDF = () => {\r\n\t\tconst unit = \"pt\";\r\n\t\tconst size = \"A4\"; // Use A1, A2, A3 or A4\r\n\t\tconst orientation = \"portrait\"; // portrait or landscape\r\n\t\r\n\t\tconst marginLeft = 40;\r\n\t\tconst doc = new jsPDF(orientation, unit, size);\r\n\t\r\n\t\tdoc.setFontSize(15);\r\n\t\r\n\t\tconst title = \"Cars List\";\r\n\t\tconst headers = [[\"ID\", \"BankName\",\"Earnings\",\"FirstName\",\"LastName\",\"iban\",\"holder_name\",\"penalty_amount\",\"phone_number\"]];\r\n\t\r\n\t\tconst data = tableData.map(item=> [\r\n\t\t\titem.key,\r\n\t\t\titem.bank_name,\r\n\t\t\titem.earnings,\r\n\t\t\titem.first_name,\r\n\t\t\titem.last_name,\r\n\t\t\titem.iban,\r\n\t\t\titem.holder_name,\r\n\t\t\titem.penalty_amount,\r\n\t\t\titem.phone_number\r\n\t\t]);\r\n\t\r\n\t\tlet content = {\r\n\t\t  startY: 50,\r\n\t\t  head: headers,\r\n\t\t  body: data\r\n\t\t};\r\n\t\r\n\t\tdoc.text(title, marginLeft, 40);\r\n\t\tdoc.autoTable(content);\r\n\t\tdoc.save(\"report.pdf\")\r\n\t  }\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className='CarBtn'>\r\n\t\t\t\t<Button type=\"default\"  icon={<DownloadOutlined /> } onClick={() =>exportPDF()}>\r\n\t\t\t\t\tPDF\r\n\t\t\t\t</Button>\r\n\t\t\t\t{/* <RangePicker\r\n\t\t\t\t\tonChange={date => setSelectDate(date)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Search\r\n\t\t\t\t\tplaceholder=\"input search text\"\r\n\t\t\t\t\tonSearch={value => setSearchText(value)}\r\n\t\t\t\t\tstyle={{ width: 200 }}\r\n\t\t\t\t/> */}\r\n\t\t\t</div>\r\n\t\t\t<div className='earning_table'>\r\n\t\t\t\t<Table startDate={startDate} endDate={endDate}  searchText={searchText} getTableData={getTableData}/>\r\n\t\t\t</div>\r\n\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default Earning\r\n"],"sourceRoot":""}