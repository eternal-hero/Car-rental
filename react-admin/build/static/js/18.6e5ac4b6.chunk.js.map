{"version":3,"sources":["history.js","auth/FetchInterceptor.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","views/app-views/admin/components/table.js","views/app-views/admin/index.js"],"names":["history","service","axios","create","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","DeleteOutlined","props","ref","React","AntdIcon","Object","assign","icon","DeleteOutlinedSvg","displayName","EditOutlined","EditOutlinedSvg","Expand","confirm","Modal","useState","setData","isModalVisible","setIsModalVisible","name","setName","email","setEmail","password","setPassword","roles","setRoles","id","setId","loading","setLoading","reloadState","setReloadState","columns","title","dataIndex","key","render","rowData","style","display","padding","onClick","handleEdit","handleDelete","content","onOk","fetch","url","method","then","resp","s","onCancel","useEffect","new_data","map","item","role","role_name","dataSource","visible","params","labelCol","span","wrapperCol","layout","Item","label","value","onChange","e","target","type","Option","toString","Admin","selectRole","setSelectRole","console","log","Fragment","className","success","rules","required"],"mappings":"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","file":"static/js/18.6e5ac4b6.chunk.js","sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\n// const TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst TOKEN_PAYLOAD_KEY = 'Authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = \"bearer \" + jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Modal, Form, Input, Select} from \"antd\";\r\nimport fetch from 'auth/FetchInterceptor';\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nexport default function Expand(props) {\r\n    const { confirm } = Modal;\r\n    const [data, setData] = useState([]);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\")\r\n    const [roles, setRoles] = useState(\"\");\r\n    const [id, setId] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [reloadState, setReloadState] = useState(true);\r\n    const columns = [\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            dataIndex: \"email\",\r\n            key: \"email\"\r\n        },\r\n        {\r\n            title: \"Roles\",\r\n            dataIndex: \"roles\",\r\n            key: \"roles\"\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            key: \"action\",\r\n            render: (rowData) => (\r\n                <>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <div style={{ padding: \"10px\" }}><EditOutlined onClick={handleEdit(rowData.key, rowData.name, rowData.email, rowData.roles)} /></div>\r\n                        <div style={{ padding: \"10px\" }}><DeleteOutlined onClick={handleDelete(rowData.key)} /></div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    ];\r\n    const handleEdit = (id, name, email,roles ) => () => {\r\n        setId(id);\r\n        setName(name);\r\n        setEmail(email);\r\n        setPassword(\"password\");\r\n        setRoles(roles);\r\n        setIsModalVisible(true)\r\n        \r\n    }\r\n    const handleDelete = (id) => () => {\r\n        confirm({\r\n            title: \"Do you want to delete these items?\",\r\n            content:\r\n              \"When clicked the OK button, this dialog will be closed after 1 second\",\r\n            onOk() {\r\n                fetch({\r\n                    url: '/deleteAdmin/' + id,\r\n                    method: 'post',\r\n                    headers: {\r\n                        'public-request': 'true'\r\n                    },\r\n                }).then((resp) => {\r\n                    setReloadState(s => !s);\r\n                   \r\n                })\r\n            },\r\n            onCancel() { }\r\n          });\r\n        \r\n        // fetch({\r\n        //     url: '/deleteAdmin/' + id,\r\n        //     method: 'post',\r\n        //     headers: {\r\n        //         'public-request': 'true'\r\n        //     },\r\n        // }).then((resp) => {\r\n        //     setReloadState(s => !s);\r\n           \r\n        // })\r\n    }\r\n    const handleOk = () => {\r\n        let params = {\r\n            name: name,\r\n            email: email,\r\n            password: password,\r\n            role: roles\r\n        }\r\n        // console.log(new_data);\r\n\r\n        fetch({\r\n            url: '/editAdmin/' +id,\r\n            method: 'post',\r\n            headers: {\r\n                'public-request': 'true'\r\n            },\r\n            params\r\n            \r\n        }).then((resp) => {\r\n            setReloadState(s => !s);\r\n        })\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const fetchProducts = () => {\r\n        setLoading(true);\r\n        fetch({\r\n            url: '/getAdmin',\r\n            method: 'get',\r\n            headers: {\r\n                'public-request': 'true'\r\n            },\r\n        }).then((resp) => {\r\n            setLoading(false);\r\n            let data = [];\r\n            let new_data = {};\r\n            resp.data.map(item => {\r\n                new_data = {\r\n                    key: item.id,\r\n                    name: item.name,\r\n                    email: item.email,\r\n                    roles: item.role.role_name.name,\r\n                }\r\n                data.push(new_data);\r\n            })\r\n            setData(data);\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, [props.reloadState, reloadState]);\r\n\r\n    const handleNameChange = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const handleEmailChange = (e) => {\r\n        setEmail( e.target.value);\r\n    }\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const handleSelectChange = (e) => {\r\n        setRoles(e);\r\n    }\r\n    return (\r\n        <>\r\n            <Table columns={columns} dataSource={data}  loading={loading} />\r\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form\r\n                    labelCol={{\r\n                        span: 4,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 14,\r\n                    }}\r\n                    layout=\"horizontal\"\r\n                >\r\n                    <Form.Item label=\"Name\">\r\n                        <Input value={name} onChange={handleNameChange}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Email\" >\r\n                        <Input value={email} onChange={handleEmailChange}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Password\" >\r\n                        <Input type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Select Role\">\r\n                        <Select value={roles} onChange={handleSelectChange}>\r\n                            {props.roles.map((item, key) => {\r\n\t\t\t\t\t\t\t\t return <Select.Option   value={item.name.toString()} key={key}>{item.name.toString()}</Select.Option>\r\n\t\t\t\t\t\t\t })} \r\n                        </Select>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useEffect, useState}from 'react';\r\nimport { Button, Modal, Form, Select, Input } from \"antd\";\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport fetch from 'auth/FetchInterceptor';\r\n\r\nimport Table from './components/table';\r\nimport '../custom.css';\r\n\r\nconst Admin = () => {\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\")\r\n    const [selectRole, setSelectRole] = useState(\"\")\r\n\tconst [roles , setRoles ] = useState([])\r\n    const [reloadState, setReloadState] = useState(true);\r\n\tconst handleAddAdmin = () => {\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setSelectRole(\"\");\r\n\t\tsetIsModalVisible(true);\r\n\t\t// console.log(\"name========>\", name);\r\n\t}\r\n\r\n    function success() {\r\n        Modal.success({\r\n          content: 'addmin add is sucessful.',\r\n        });\r\n      }\r\n\r\n\tconst handleOk = () => {\r\n        let params = {\r\n            email: email,\r\n            name: name,\r\n            password: password,\r\n            role: selectRole\r\n        };\r\n        fetch({\r\n            url: '/admin_user',\r\n            method: 'post',\r\n            headers: {\r\n                'public-request': 'true'\r\n            },\r\n            params,\r\n        }).then((resp) => {\r\n\t\t\tsetIsModalVisible(false);\r\n            setReloadState(s => !s);\r\n            success();\r\n\t\t})\r\n        \r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\tconst handleNameChange = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const handleEmailChange = (e) => {\r\n        setEmail( e.target.value);\r\n    }\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const handleSelectChange = (e) => {\r\n        // console.log(\"ssss\", e);\r\n        setSelectRole(e);\r\n    }\r\n\tconst getRole = () => {\r\n\t\tfetch({\r\n            url: '/getRoles',\r\n            method: 'get',\r\n            headers: {\r\n                'public-request': 'true'\r\n            },\r\n        }).then((resp) => {\r\n\t\t\tconsole.log(resp.data);\r\n\t\t\tsetRoles(resp.data);\r\n\t\t})\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tgetRole();\r\n\t},[]);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t\r\n\t\t\t<div className='RoleBtn'>\r\n\t\t\t\t<h1>ADMINISTRATORS</h1>\r\n\t\t\t\t<Button type=\"primary\" onClick={handleAddAdmin}>ADD ADMIN</Button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Table  reloadState={reloadState} roles={roles}/>\r\n\t\t\t</div>\r\n\t\t\t<Modal title=\"Add Admin\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form\r\n                    labelCol={{\r\n                        span: 4,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 14,\r\n                    }}\r\n                    layout=\"horizontal\"\r\n                >\r\n                    <Form.Item label=\"Name\" rules={[{required: true, }, ]}>\r\n                        <Input onChange={handleNameChange} value={name} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Email\" rules={[{required: true, }, ]} >\r\n                        <Input  onChange={handleEmailChange} value={email} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Password\" rules={[{required: true, }, ]} >\r\n                        <Input type=\"password\" onChange={handlePasswordChange} value={password}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Select Role\" rules={[{required: true, }, ]}>\r\n                        <Select value={selectRole} onChange={handleSelectChange} >\r\n\t\t\t\t\t\t\t {roles.map((item, key) => {\r\n\t\t\t\t\t\t\t\t return <Select.Option   value={item.name.toString()} key={key}>{item.name.toString()}</Select.Option>\r\n\t\t\t\t\t\t\t })} \r\n                            \r\n                        </Select>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </Modal>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default Admin\r\n"],"sourceRoot":""}