{"version":3,"sources":["components/shared-components/Flex/index.js","configs/AppConfig.js","configs/EnvironmentConfig.js","constants/ThemeConstant.js","redux/constants/Auth.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","APP_NAME","API_BASE_URL","env","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","APP_IMAGE_URL","THEME_CONFIG","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_LIGHT","SIDE_NAV_DARK","NAV_TYPE_SIDE","NAV_TYPE_TOP","DIR_LTR","DIR_RTL","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","initTheme","theme","navCollapsed","sideNavTheme","locale","navType","topNavColor","headerNavColor","mobileNav","currentTheme","direction","reducers","combineReducers","Theme","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","console","log","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","Icon","this","React","createElement","Component","dashBoardNavTree","key","path","title","icon","WindowsOutlined","breadcrumb","submenu","CarOutlined","FileDoneOutlined","TeamOutlined","DashboardOutlined","EuroCircleOutlined","TrophyOutlined","SolutionOutlined","LogoutOutlined","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","onDirectionChange","configState","isCollapse","useThemeSwitcher","switcher","themes","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","getLayoutGutter","status","paddingLeft","paddingRight","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","RouteInterceptor","isAuthenticated","rest","render","currentAppLocale","Array","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading"],"mappings":"kGAAA,gBAGMA,EAAO,SAAAC,GACZ,IAAQC,EAA+ED,EAA/EC,SAAUC,EAAqEF,EAArEE,UAAWC,EAA0DH,EAA1DG,WAAYC,EAA8CJ,EAA9CI,eAAgBC,EAA8BL,EAA9BK,WAAYC,EAAkBN,EAAlBM,cAErE,OACC,qBAAKJ,UAAS,UAFiBG,EAAa,SAAW,YAEzC,YAA4BH,EAA5B,YAAyCI,EAAe,QAAUA,EAAgB,GAAlF,YAAwFH,EAAY,eAAiBA,EAAY,GAAjI,YAAuIC,EAAgB,mBAAqBA,EAAgB,IAA1M,SACEH,KAaJF,EAAKQ,aAAe,CACnBF,YAAY,EACZC,cAAe,MACfJ,UAAW,IAIGH,O,gCC5Bf,+NAGaS,EAAW,gBACXC,EAAeC,IAAIC,iBACnBC,EAAkB,OAClBC,EAAmB,QACnBC,EAAgB,+CAEhBC,EACb,CACE,QAAW,OACX,aAAgB,gBAChB,cAAgB,EAChB,YAAe,UACf,eAAkB,YAClB,OAAU,KACV,aAAgB,QAChB,UAAa,Q,iUClBf,sCA0BaL,EArBA,CACXC,iBAAkB,mC,0muBCNpB,gRAAO,IACMK,EAAiB,IACjBC,EAA2B,GAC3BC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAgB,OAChBC,EAAe,MACfC,EAAU,MACVC,EAAU,O,gCCRvB,4dAAO,IAAMC,EAAS,SACTC,EAAgB,gBAChBC,EAAU,UACVC,EAAkB,kBAClBC,EAAS,SACTC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAe,eACfC,EAAa,aACbC,EAAqB,qBACrBC,EAAmC,mCACnCC,EAAuB,uBACvBC,EAAqC,sC,mICD5CC,EAAY,CAChBC,SAAS,EACTC,QAAS,GACTC,aAAa,EACbC,SAAU,GACVC,MAAOC,aAAaC,QAAQZ,MAiEfa,EA9DF,WAAgC,IAA/BC,EAA8B,uDAAtBT,EAAWU,EAAW,uCAC3C,OAAQA,EAAOC,MACd,KAAKxB,IACJ,OAAO,2BACHsB,GADJ,IAECR,SAAS,EACTG,SAAU,IACVC,MAAOK,EAAOL,QAEhB,KAAKb,IACJ,OAAO,2BACHiB,GADJ,IAECP,QAASQ,EAAOR,QAChBC,aAAa,EACbF,SAAS,IAEX,KAAKR,IACJ,OAAO,2BACHgB,GADJ,IAECP,QAAS,GACTC,aAAa,IAEf,KAAKd,IACJ,OAAO,2BACHoB,GADJ,IAECJ,MAAO,KACPD,SAAU,IACVH,SAAS,IAGX,KAAKV,IACJ,OAAO,2BACFkB,GADL,IAEER,SAAS,EACTI,MAAOK,EAAOL,QAGjB,KAAKX,IACJ,OAAO,2BACHe,GADJ,IAECR,SAAS,IAGX,KAAKJ,IAOL,KAAKE,IACJ,OAAO,2BACHU,GADJ,IAECR,SAAS,EACTI,MAAOK,EAAOL,QAGhB,QACC,OAAOI,IC9EGG,EAAuB,uBACvBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAAoB,oBACpBC,EAAe,eACfC,EAAmB,mB,QCK1BC,EAAS,eACV5C,KAuDU6C,EApDD,WAAgC,IAA/Bb,EAA8B,uDAAtBY,EAAWX,EAAW,uCAC3C,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GADL,IAEEc,aAAcb,EAAOa,eAEzB,KAAKT,EACH,OAAO,2BACFL,GADL,IAEEe,aAAcd,EAAOc,eAEzB,KAAKX,EACH,OAAO,2BACFJ,GADL,IAEEgB,OAAQf,EAAOe,SAEnB,KAAKV,EACH,OAAO,2BACFN,GADL,IAEEiB,QAAShB,EAAOgB,UAEpB,KAAKV,EACH,OAAO,2BACFP,GADL,IAEEkB,YAAajB,EAAOiB,cAExB,KAAKV,EACH,OAAO,2BACFR,GADL,IAEEmB,eAAgBlB,EAAOkB,iBAE3B,KAAKV,EACH,OAAO,2BACFT,GADL,IAEEoB,UAAWnB,EAAOmB,YAEtB,KAAKV,EACH,OAAO,2BACFV,GADL,IAEEqB,aAAcpB,EAAOoB,eAEzB,KAAKV,EACH,OAAO,2BACFX,GADL,IAEEsB,UAAWrB,EAAOqB,YAEtB,QACE,OAAOtB,ICxDEuB,EALEC,YAAgB,CAC7BX,MAAOY,EACP1B,KAAM2B,I,0DCKKC,G,cAXQ,CACrBC,OAAQ,0CACRC,WAAY,yBACZC,YAAa,gCACbC,UAAW,SACXC,cAAe,qBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCHjBC,IAASC,cAAcC,GAGZF,IAASG,YAApB,IACMxC,EAAOqC,IAASrC,OAEhByC,GADczC,EAAK0C,YACE,IAAIL,IAASrC,KAAK2C,oBACvCC,EAAuB,IAAIP,IAASrC,KAAK6C,qBCVzCC,GDWsB,IAAIT,IAASrC,KAAK+C,oBACnB,IAAIV,IAASrC,KAAKgD,mBCZrB,IAExBF,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC9BpD,EAAKqD,2BAA2BH,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADnD,mFAArC,wDAGAX,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC7BpD,EAAKqD,2BAA2BH,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADpD,mFAArC,wDAGAX,EAAgBY,eAAhB,sBAAiC,sBAAAN,EAAA,sEAC1BpD,EAAK2D,UAAUL,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADrB,mFAGjCX,EAAgBc,oBAAhB,sBAAsC,sBAAAR,EAAA,sEAC9BpD,EAAK6D,gBAAgBpB,GAAoBa,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGtCX,EAAgBgB,sBAAhB,sBAAwC,sBAAAV,EAAA,sEAChCpD,EAAK6D,gBAAgBjB,GAAsBU,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGxCX,EAAgBiB,mBAAhB,uCAAqC,WAAOb,EAAOC,GAAd,SAAAC,EAAA,sEAC9BpD,EAAKgE,+BAA+Bd,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADvD,mFAArC,wDAGeX,Q,WCFEmB,G,WAiBAN,G,WAiBAO,G,WAkBAC,G,WAgBAC,G,WAgBQC,GApFlB,SAAUJ,IAAV,iEACL,OADK,SACCK,YAAU5F,IAAD,UAAS,2FAGV,OAHsB6F,EAAZ,EAAYA,QAC7BrB,EAAmBqB,EAAnBrB,MAAOC,EAAYoB,EAAZpB,SADU,kBAGJqB,YAAK1B,EAAgBG,mBAAoBC,EAAOC,GAH5C,YAGjBI,EAHiB,QAId7D,QAJc,iBAKtB,OALsB,SAKhB+E,YAAIC,YAAgBnB,EAAK7D,UALT,+BAQtB,OADAI,aAAa6E,QAAQxF,IAAYoE,EAAKA,KAAKqB,KAPrB,UAQhBH,YAAII,YAActB,EAAKA,KAAKqB,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAiBA,SAAUf,IAAV,iEACL,OADK,SACCW,YAAU1F,IAAD,UAAU,8EAMvB,OANuB,SAIvBkG,QAAQC,IAAI,qBACZjF,aAAakF,WAAW7F,KALD,SAMjBsF,YAAIQ,eANa,8BAWxB,OAXwB,mCAWlBR,YAAIC,YAAgB,EAAD,KAXD,yDADpB,uCAiBA,SAAUR,IAAV,iEACL,OADK,SACCI,YAAUxF,IAAD,UAAS,2FAGV,OAHsByF,EAAZ,EAAYA,QAC7BrB,EAAmBqB,EAAnBrB,MAAOC,EAAYoB,EAAZpB,SADU,kBAGJqB,YAAK1B,EAAgBiB,mBAAoBb,EAAOC,GAH5C,YAGjBI,EAHiB,QAId7D,QAJc,iBAKtB,OALsB,SAKhB+E,YAAIC,YAAgBnB,EAAK7D,UALT,+BAQtB,OADAI,aAAa6E,QAAQxF,IAAYoE,EAAKA,KAAKqB,KAPrB,UAQhBH,YAAIS,YAAc3B,EAAKA,KAAKqB,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAkBA,SAAUP,IAAV,iEACL,OADK,SACCG,YAAUlF,IAAD,UAAqB,oFAEtB,OAFsB,kBAEhBoF,YAAK1B,EAAgBc,qBAFL,YAE7BL,EAF6B,QAG1B7D,QAH0B,gBAIlC,OAJkC,SAI5B+E,YAAIC,YAAgBnB,EAAK7D,UAJG,8BAOlC,OADAI,aAAa6E,QAAQxF,IAAYoE,EAAKA,KAAKqB,KANT,UAO5BH,YAAIU,YAA8B5B,EAAKA,KAAKqB,MAPhB,gCAUnC,OAVmC,oCAU7BH,YAAIC,YAAgB,EAAD,KAVU,0DAD/B,uCAgBA,SAAUN,IAAV,iEACL,OADK,SACCE,YAAUhF,IAAD,UAAuB,oFAExB,OAFwB,kBAElBkF,YAAK1B,EAAgBgB,uBAFH,YAE/BP,EAF+B,QAG5B7D,QAH4B,gBAIpC,OAJoC,SAI9B+E,YAAIC,YAAgBnB,EAAK7D,UAJK,8BAOpC,OADAI,aAAa6E,QAAQxF,IAAYoE,EAAKA,KAAKqB,KANP,UAO9BH,YAAIW,YAAgC7B,EAAKA,KAAKqB,MAPhB,gCAUrC,OAVqC,oCAU/BH,YAAIC,YAAgB,EAAD,KAVY,0DADjC,uCAgBQ,SAAUL,IAAV,iEACb,OADa,SACPgB,YAAI,CACVC,YAAKrB,GACLqB,YAAK3B,GACL2B,YAAKpB,GACLoB,YAAKnB,GACLmB,YAAKlB,KANQ,uC,eCrGUC,GAAV,SAAUA,EAASkB,GAAnB,iEACb,OADa,SACPF,YAAI,CACR1D,MAFW,uCCEf,IAAM6D,EAAiBC,cAEjBC,GAAc,CAACF,GAqBrB,IAEeG,GArBf,SAAwBC,GAEtB,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAClEL,EAAQM,YAAYzE,EAAUoE,EAAgBC,EAClDK,IAAe,WAAf,EAAmBR,MAYrB,OATAF,EAAeW,IAAI9B,GASZsB,EAGKS,G,yGCxBCC,iBADK,SAAAnJ,GAAK,OAAI,eAAC,KAAD,eAAsBA,MACZ,CACrCoJ,SAAS,I,sCCMIC,GATf,gKACC,WACC,MAA6BC,KAAKtJ,MAA1BiD,EAAR,EAAQA,KAAM/C,EAAd,EAAcA,UACd,OACC,qCAAGqJ,IAAMC,cAAcvG,EAAM,CAAE/C,UAAWA,UAJ7C,GAA0BuJ,a,0FCWpBC,GAAmB,CAAC,CACxBC,IAAK,YACLC,KAAK,GAAD,OAAKhJ,IAAL,cACJiJ,MAAO,yBACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,OACLC,KAAK,GAAD,OAAKhJ,IAAL,SACJiJ,MAAO,oBACPC,KAAMI,KACNF,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,YACLC,KAAK,GAAD,OAAKhJ,IAAL,cACJiJ,MAAO,yBACPC,KAAMK,KACNH,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,WACLC,KAAK,GAAD,OAAKhJ,IAAL,aACJiJ,MAAO,wBACPC,KAAMK,KACNH,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,QACLC,KAAK,GAAD,OAAKhJ,IAAL,UACJiJ,MAAO,qBACPC,KAAMM,KACNJ,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,QACLC,KAAK,GAAD,OAAKhJ,IAAL,UACJiJ,MAAO,qBACPC,KAAMO,KACNL,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,UACLC,KAAK,GAAD,OAAKhJ,IAAL,aACJiJ,MAAO,uBACPC,KAAMQ,KACNN,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,OACLC,KAAK,GAAD,OAAKhJ,IAAL,SACJiJ,MAAO,oBACPC,KAAMS,KACNP,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,QACLC,KAAK,GAAD,OAAKhJ,IAAL,UACJiJ,MAAO,qBACPC,KAAMU,KACNR,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,SACLC,KAAK,GAAD,OAAKhJ,IAAL,WACJiJ,MAAO,sBACPC,KAAMW,KACNT,YAAY,EACZC,QAAS,KAOIS,GAJO,UACjBhB,ICiIUiB,G,qGAhNd,SAAsBC,GACrB,IAAIC,EAAWD,EAAKE,MAAM,UAAY,GACtC,QAASD,EAASE,SAAW,KAAOF,EAASG,OAAS,KAAKC,gB,0BAS5D,SAAoBC,EAAStB,GAC5B,GAAIsB,EAAQtB,OAASA,EACnB,OAAOsB,EAET,IAAIC,EACJ,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQG,eAAeD,IAA4B,kBAAfF,EAAQE,KAChDD,EAAQ7B,KAAKgC,aAAaJ,EAAQE,GAAIxB,IAErC,OAAOuB,EAIV,OAAOA,I,8BAQR,SAAwBI,GACvB,IAAIA,EACH,MAAO,OASR,SAASC,EAAOC,GAAI,MAAwB,MAAhBA,EAAEC,OAAO,GAAcD,EAAEE,UAAU,EAAE,GAAGF,EAEpE,OAD6B,IAJFG,SAAUJ,EAHjBD,GAG4BI,UAAU,EAAE,GAAG,IAIjB,IAH9C,SAAgBF,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHhDE,CAAON,GAMwC,IAF9D,SAAgBE,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHjDG,CAAOP,IAKiD,IARpD,IAUV,OAEA,U,wBAUT,SAAkBQ,EAAOC,GACxB,IAAIC,EAAIL,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCO,EAAIN,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCQ,EAAIP,SAASG,EAAMJ,UAAU,EAAE,GAAG,IACtCM,EAAIL,SAASK,GAAK,IAAMD,GAAW,KAInCE,GAHAA,EAAIN,SAASM,GAAK,IAAMF,GAAW,MAG5B,IAAKE,EAAE,IACdC,GAHAA,EAAIP,SAASO,GAAK,IAAMH,GAAW,MAG5B,IAAKG,EAAE,IACd,IAAMC,EAAiC,KAHvCH,EAAKA,EAAE,IAAKA,EAAE,KAGCI,SAAS,IAAIC,OAAhB,WAAoCL,EAAEI,SAAS,KAAQJ,EAAEI,SAAS,IACxEE,EAAiC,IAA1BL,EAAEG,SAAS,IAAIC,OAAhB,WAAoCJ,EAAEG,SAAS,KAAQH,EAAEG,SAAS,IACxEG,EAAiC,IAA1BL,EAAEE,SAAS,IAAIC,OAAhB,WAAoCH,EAAEE,SAAS,KAAQF,EAAEE,SAAS,IAC9E,MAAM,IAAN,OAAWD,GAAX,OAAgBG,GAAhB,OAAqBC,K,uBAQtB,SAAiBC,GAChB,IAAMC,EAAO,SAAAC,GAAG,OAAKA,EAAIC,QAAQ,cAAc,KACzCC,EAAUJ,EAAKd,UAAUc,EAAKK,QAAQ,MAAMC,MAAM,KACvDC,EAAIpB,SAASc,EAAKG,EAAQ,GAAGlB,UAAU,IAAK,IAC5CsB,EAAIrB,SAASc,EAAKG,EAAQ,IAAK,IAC/BK,EAAItB,SAASc,EAAKG,EAAQ,IAAK,IAC/B3G,EAAIiH,WAAWT,EAAKG,EAAQ,GAAGlB,UAAU,EAAGkB,EAAQ,GAAGP,OAAS,KAAKc,QAAQ,GACvEC,EAAW,CACjBL,EAAEX,SAAS,IACXY,EAAEZ,SAAS,IACXa,EAAEb,SAAS,IACXiB,KAAKC,MAAU,IAAJrH,GAASmG,SAAS,IAAIV,UAAU,EAAG,IAQ/C,OALA0B,EAASG,SAAQ,SAAUC,EAAMC,GACZ,IAAhBD,EAAKnB,SACRe,EAASK,GAAK,IAAMD,MAGhB,IAAN,OAAYJ,EAASM,KAAK,O,wBAU3B,SAAkBC,EAAQC,EAAUC,GACnC,OAAIF,EAAS,EACLC,EAEJD,EAAS,EACLE,EAED,O,6BAUR,SAAuB5H,EAAGgH,EAAGvD,GAC5B,MAAqB,kBAAXzD,EAAEyD,IAAuC,kBAAXuD,EAAEvD,GAClCzD,EAAEyD,GAAOuD,EAAEvD,GAGE,kBAAXzD,EAAEyD,IAAuC,kBAAXuD,EAAEvD,IACzCzD,EAAIA,EAAEyD,GAAKoE,gBACXb,EAAIA,EAAEvD,GAAKoE,gBACK,EAAIb,EAAIhH,EAAI,EAAI,OAHjC,I,yBAeD,SAAmB8H,EAAMrE,EAAKsE,GAC7B,IAAIC,EAAOF,EAIX,OAHGA,IACFE,EAAOF,EAAKG,QAAO,SAAAC,GAAI,OAAIA,EAAKzE,KAASsE,MAEnCC,I,4BAUR,SAAsBF,EAAMrE,EAAKsE,GAChC,IAAIC,EAAOF,EAIX,OAHGA,IACFE,EAAOF,EAAKG,QAAO,SAAAC,GAAI,OAAIA,EAAKzE,KAASsE,MAEnCC,I,4BASR,SAAsBF,EAAMK,GAY3B,OADAL,EAAOA,EAAKG,QAAO,SAAAF,GAAK,OAVL,SAACG,GACnB,IAAK,IAAIzE,KAAOyE,EACf,GAAiB,MAAbA,EAAKzE,KAG2E,IAAhFyE,EAAKzE,GAAK0C,WAAWpB,cAAc6B,QAAQuB,EAAMhC,WAAWpB,eAC/D,OAAO,EAIkBqD,CAAWL,Q,2BASxC,SAAqBM,GACpB,IAAIC,EAAc,GAClB,IAAK,IAAM7E,KAAO4E,EAAS,CAC1B,GAAIA,EAAQlD,eAAe1B,GACV4E,EAAQ5E,IAEvB6E,EAAYC,KAAK9E,GAIpB,OAAO6E,M,KCvMF,SAASE,GAAmB7K,GACjC,MAAO,CACLZ,KAAMC,EACNW,gBAuCG,SAAS8K,GAAkBxK,GAChC,MAAO,CACLlB,KAAMO,EACNW,aC9CJ,IAAQyK,GAAYC,KAAZD,QACAE,GAAkBC,KAAlBD,cAEFE,GAAY,SAACC,EAAYC,GAAb,OAChBD,EAAa,eAAC,GAAD,CAAaE,GAAID,IAAgBA,EAAU7C,YAEpD+C,GAAiB,SAACzF,GACtB,IAAI0F,EAAU,GACVC,EAAY,GAChB,GAAI3F,EAEF,IADA,IAAM4F,EAAM5F,EAAIoD,MAAM,KACbyC,EAAQ,EAAGA,EAAQD,EAAIjD,OAAQkD,IAAS,CAC/C,IAAMC,EAAMF,EAAIC,GACDF,EAAL,IAAVE,EAA2BC,EAAiB,UAAMH,EAAN,YAAmBG,GAC/DJ,EAAQZ,KAAKa,GAGjB,OAAOD,GAGHK,GAAiB,SAAC1P,GACvB,IAAQ8D,EAA6E9D,EAA7E8D,aAAc6L,EAA+D3P,EAA/D2P,UAAWC,EAAoD5P,EAApD4P,eAAgBC,EAAoC7P,EAApC6P,aAAclB,EAAsB3O,EAAtB2O,kBACzDmB,GAAYC,GAAMC,cAAclB,MAAiBmB,SAAS,MAC1DC,EAAiB,WAClBJ,GACHnB,GAAkB,IAGnB,OACE,eAAC,KAAD,CACE/K,MAAOE,IAAiB5C,KAAiB,QAAU,OACnDiP,KAAK,SACLC,MAAO,CAAEC,OAAQ,OAAQC,YAAa,GACtCC,oBAAqB,QAACZ,QAAD,IAACA,OAAD,EAACA,EAAWhG,KACjC6G,gBAAiBpB,GAAc,OAACO,QAAD,IAACA,OAAD,EAACA,EAAWhG,KAC3CzJ,UAAW0P,EAAiB,mBAAqB,GANnD,SAQGlF,GAAiB+F,KAAI,SAACC,GAAD,OACpBA,EAAKzG,QAAQqC,OAAS,EACpB,eAAC,KAAKqE,UAAN,CAEE9G,MAAOmF,GAAUa,EAAca,EAAK7G,OAFtC,SAIG6G,EAAKzG,QAAQwG,KAAI,SAACG,GAAD,OAChBA,EAAa3G,QAAQqC,OAAS,EAC5B,eAACsC,GAAD,CACE9E,KACE8G,EAAa9G,KACX,eAAC,GAAD,CAAM7G,KAAI,OAAE2N,QAAF,IAAEA,OAAF,EAAEA,EAAc9G,OACxB,KAGND,MAAOmF,GAAUa,EAAce,EAAa/G,OAP9C,SASG+G,EAAa3G,QAAQwG,KAAI,SAACI,GAAD,OACxB,gBAAC,KAAKC,KAAN,WACGD,EAAc/G,KACb,eAAC,GAAD,CAAM7G,KAAI,OAAE4N,QAAF,IAAEA,OAAF,EAAEA,EAAe/G,OACzB,KACJ,gCACGkF,GAAUa,EAAcgB,EAAchH,SAEzC,eAAC,KAAD,CAAMkH,QAAS,kBAAMb,KAAkBc,GAAIH,EAAcjH,SAP3CiH,EAAclH,SAJ3BiH,EAAajH,KAgBpB,gBAAC,KAAKmH,KAAN,WACGF,EAAa9G,KAAO,eAAC,GAAD,CAAM7G,KAAM2N,EAAa9G,OAAW,KACzD,gCAAOkF,GAAUa,EAAce,EAAa/G,SAC5C,eAAC,KAAD,CAAMkH,QAAS,kBAAMb,KAAkBc,GAAIJ,EAAahH,SAH1CgH,EAAajH,SA3B5B+G,EAAK/G,KAoCZ,gBAAC,KAAKmH,KAAN,WACGJ,EAAK5G,KAAO,eAAC,GAAD,CAAM7G,KAAI,OAAEyN,QAAF,IAAEA,OAAF,EAAEA,EAAM5G,OAAW,KAC1C,gCAAOkF,GAAUa,EAAD,OAAea,QAAf,IAAeA,OAAf,EAAeA,EAAM7G,SACpC6G,EAAK9G,KAAO,eAAC,KAAD,CAAMmH,QAAS,kBAAMb,KAAkBc,GAAIN,EAAK9G,OAAW,OAH1D8G,EAAK/G,WAWzBsH,GAAgB,SAACjR,GACrB,IAAQiE,EAA8BjE,EAA9BiE,YAAa4L,EAAiB7P,EAAjB6P,aACrB,OACE,eAAC,KAAD,CAAMM,KAAK,aAAaC,MAAO,CAAEc,gBAAiBjN,GAAlD,SACGyG,GAAiB+F,KAAI,SAACC,GAAD,OACpBA,EAAKzG,QAAQqC,OAAS,EACpB,eAACsC,GAAD,CAEEuC,eAAe,eACftH,MACE,kCACG6G,EAAK5G,KAAO,eAAC,GAAD,CAAM7G,KAAI,OAAEyN,QAAF,IAAEA,OAAF,EAAEA,EAAM5G,OAAW,KAC1C,gCAAOkF,GAAUa,EAAca,EAAK7G,YAN1C,SAUG6G,EAAKzG,QAAQwG,KAAI,SAACG,GAAD,OAChBA,EAAa3G,QAAQqC,OAAS,EAC5B,eAACsC,GAAD,CAEE9E,KACE8G,EAAa9G,KACX,eAAC,GAAD,CAAM7G,KAAI,OAAE2N,QAAF,IAAEA,OAAF,EAAEA,EAAc9G,OACxB,KAEND,MAAOmF,GAAUa,EAAce,EAAa/G,OAP9C,SASG+G,EAAa3G,QAAQwG,KAAI,SAACI,GAAD,OACxB,gBAAC,KAAKC,KAAN,WACE,gCACG9B,GAAUa,EAAcgB,EAAchH,SAEzC,eAAC,KAAD,CAAMmH,GAAIH,EAAcjH,SAJViH,EAAclH,SAT3BiH,EAAajH,KAkBpB,gBAAC,KAAKmH,KAAN,WACGF,EAAa9G,KACZ,eAAC,GAAD,CAAM7G,KAAI,OAAE2N,QAAF,IAAEA,OAAF,EAAEA,EAAc9G,OACxB,KACJ,gCAAOkF,GAAUa,EAAce,EAAa/G,SAC5C,eAAC,KAAD,CAAMmH,GAAIJ,EAAahH,SALTgH,EAAajH,SA9B5B+G,EAAK/G,KAyCZ,gBAAC,KAAKmH,KAAN,WACGJ,EAAK5G,KAAO,eAAC,GAAD,CAAM7G,KAAI,OAAEyN,QAAF,IAAEA,OAAF,EAAEA,EAAM5G,OAAW,KAC1C,gCAAOkF,GAAUa,EAAD,OAAea,QAAf,IAAeA,OAAf,EAAeA,EAAM7G,SACpC6G,EAAK9G,KAAO,eAAC,KAAD,CAAMoH,GAAIN,EAAK9G,OAAW,OAHzB8G,EAAK/G,WAwBhByH,gBALS,SAAC,GAAe,IAAbxN,EAAY,EAAZA,MAEzB,MAAO,CAAEE,aAD6BF,EAA9BE,aACeG,YADeL,EAAhBK,eAIgB,CAAE0K,sBAA3ByC,EAbK,SAACpR,GACnB,OAAOA,EAAMiD,OAAS7B,KACpB,eAAC,GAAD,eAAoBpB,IAEpB,eAAC,GAAD,eAAmBA,OC1JfqR,GAAUC,KAAVD,MAyBOD,gBALS,SAAC,GAAe,IAAbxN,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aAD+BD,EAAhCC,aACeC,aADiBF,EAAlBE,gBAITsN,EAvBQ,SAAC,GAAmF,IAAlFvN,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,aAAc6L,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,eAA0C,IAA1BC,aACxE7P,EAAQ,CAAE8D,eAAc6L,YAAYC,iBAAgBC,kBAD8C,UAExG,OACE,eAACwB,GAAD,CACEnR,UAAS,mBAAc4D,IAAiB3C,KAAe,gBAAkB,IACzEoQ,MAAOvQ,KACPwQ,UAAW3N,EAHb,SAKE,eAAC,cAAD,CAAY4N,UAAQ,EAApB,SACE,eAAC,GAAD,aACExO,KAAM7B,MACFpB,WCKCoR,gBALS,SAAC,GAEvB,MAAO,CAAEnN,YAF4B,EAAZL,MACjBK,eAIKmN,EAnBO,SAAC,GAAwC,IAAvCnN,EAAsC,EAAtCA,YAAsC,IAAzB4L,aAC9B7P,EAAQ,CAAEiE,cAAa4L,kBADgC,UAE7D,OACC,sBAAK3P,UAAS,kBAAa6P,GAAM2B,iBAAiBzN,IAAgBmM,MAAO,CAACc,gBAAiBjN,GAA3F,SACC,sBAAK/D,UAAU,kBAAf,SACC,eAAC,GAAD,aACC+C,KAAM5B,MACFrB,W,mBCRHqJ,GAAO,eAACsI,GAAA,EAAD,CAAiBvB,MAAO,CAAEwB,SAAU,IAAMC,MAAI,IAErDC,GAAU,SAAC9R,GAChB,IAAQ+R,EAAiB/R,EAAjB+R,MAAOC,EAAUhS,EAAVgS,MACf,OACC,sBAAK9R,UAAS,uBAAkB6R,EAAlB,kBAAiCC,GAA/C,SACC,eAAC,KAAD,CAAMC,UAAW5I,QAUpByI,GAAQvR,aAAe,CACtBwR,MAAO,SACPC,MAAO,UAGOF,U,UCnBPhD,GAAkBC,KAAlBD,cAEFoD,GAAqB,SAAClS,EAAO8P,GACjC,IAAQjM,EAA0B7D,EAA1B6D,aACFsO,EAD4BnS,EAAZgE,UACO3C,KAC7B,OAAGyO,IAAa9P,EAAMoS,WACb,EAEND,EACM,OAGD,GAAN,OADCtO,EACS5C,KAEAD,KAFV,OAMEqR,GAAU,SAACrS,GACf,IAAQ6D,EAA2B7D,EAA3B6D,aACR,MAAgB,UADmB7D,EAAbsS,SAEjBzO,EACM,yBAEF,sBAGLA,EACK,mBAEF,iBAGH0O,GAAiB,SAACzC,EAAUsC,GAChC,OAAGtC,IAAasC,EACP,SAEA,QAoBIhB,gBALS,SAAC,GAAe,IAAbxN,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aAD0BD,EAA3BC,aACeG,QADYJ,EAAbI,WAIToN,EAhBK,SAACpR,GACnB,IAAM8P,GAAYC,GAAMC,cAAclB,MAAiBmB,SAAS,MAChE,OACE,sBACE/P,UAAWqS,GAAezC,EAAU9P,EAAMoS,YAC1ChC,MAAO,CAACmB,MAAM,GAAD,OAAKW,GAAmBlS,EAAO8P,KAF9C,SAGE,sBAAK0C,IAAKH,GAAQrS,GAAQyS,IAAG,UAAKjS,IAAL,gB,oBCCpB4Q,gBALS,SAAC,GAAe,IAAbxN,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aADyCD,EAA1CC,aACeC,aAD2BF,EAA5BE,aACeK,UADaP,EAAdO,aAIE,CAAEwK,sBAA3ByC,EA5CU,SAAC,GAOnB,IANLtN,EAMI,EANJA,aACAK,EAKI,EALJA,UACAwK,EAII,EAJJA,kBACAgB,EAGI,EAHJA,UACAC,EAEI,EAFJA,eAEI,IADJC,aAEM7P,EAAQ,CAAE8D,eAAc6L,YAAWC,iBAAgBC,kBADrD,UAGE6C,EAAU,WACd/D,GAAkB,IAGpB,OACE,eAAC,KAAD,CACEgE,UAAU,OACVC,UAAU,EACVF,QAASA,EACTG,QAAS1O,EACT2O,UAAW,CAAEC,QAAS,GALxB,SAOE,gBAAChT,GAAA,EAAD,CAAMO,cAAc,SAASJ,UAAU,QAAvC,UACE,gBAACH,GAAA,EAAD,CAAMK,eAAe,UAAUD,WAAW,SAA1C,UACE,eAAC,GAAD,CAAMiS,YAAY,IAClB,sBAAKlS,UAAU,YAAY6Q,QAAS,kBAAM2B,KAA1C,SACE,eAACM,GAAA,EAAD,SAGJ,sBAAK9S,UAAU,kBAAf,SACE,eAAC,cAAD,CAAYuR,UAAQ,EAApB,SACE,eAAC,GAAD,aAAaxO,KAAM7B,MAAmBpB,gB,mGCUnCiT,GAhDK,SAAAjT,GAEnB,IAAQkT,EAA0BlT,EAA1BkT,YAAR,EAAkClT,EAAb+L,aAArB,MAA2B,GAA3B,EAEA,EAA8BoH,oBAAS,GAAvC,oBAAON,EAAP,KAAgBO,EAAhB,KACA,EAAsCD,mBAASpH,GAA/C,oBAAOsH,EAAP,KAAoBC,EAApB,KACA,EAAgCH,mBAASpH,GAAzC,oBAAOwH,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACTD,EAAYzH,GACZuH,EAAevH,KACb,CAACA,IAEJ,IAAM2H,EAAmB,WACxBN,GAAYP,IAWb,OACC,uBAAK3S,UAAU,eAAf,UACC,sBAAKA,UAAU,wBAAf,SACC,sBAAKA,UAAU,QAAQkQ,MAAO,CAACc,gBAAiBqC,GAAsB,WAAYxC,QAAS2C,MAG3Fb,GACC,uCACC,sBAAK3S,UAAU,wBAAwB6Q,QAAS2C,IAChD,eAAC,KAAD,CAAc3H,MAAOsH,EAAaM,SAjBjB,SAAC1F,GACtB,IAAO2F,EAAO3F,EAAP2F,IACDnH,EAAI,cAAUmH,EAAI5G,EAAd,aAAoB4G,EAAI3G,EAAxB,aAA8B2G,EAAI1G,EAAlC,aAAwC0G,EAAI1N,EAA5C,KACVsN,EAAY/G,GACZ6G,EAAeM,GACfV,EAAYjF,a,uECdd,IAAM4F,GAAmB,SAAC,GAAgB,IACnCC,EANP,SAA4B/P,GAE3B,OADagQ,GAAK5F,QAAO,SAAAsB,GAAG,OAAKA,EAAIuE,SAAWjQ,KACpC,GAIKkQ,CADuB,EAAblQ,QAEpBmQ,EAAkBJ,EAAlBI,SAAUpK,EAAQgK,EAARhK,KACjB,OACC,uBAAK5J,UAAU,4BAAf,UACC,sBAAKkQ,MAAO,CAAC+D,SAAU,QAAS3B,IAAG,qBAAgB1I,EAAhB,QAA4B2I,IAAKyB,IACpE,wBAAMhU,UAAU,4BAAhB,UAA6CgU,EAA7C,IAAuD,eAACE,GAAA,EAAD,CAAclU,UAAU,wBAwDnEkR,gBALS,SAAC,GAEvB,MAAO,CAAErN,OAF4B,EAAZH,MACjBG,UAI8B,CAACsQ,eRhDlC,SAAwBtQ,GAC7B,MAAO,CACLd,KAAME,EACNY,YQ6CWqN,EAnDY,SAAC,GAA+C,IAA7CrN,EAA4C,EAA5CA,OAAQuQ,EAAoC,EAApCA,cAAeD,EAAqB,EAArBA,eAC9CE,EACL,eAAC,KAAD,UAEER,GAAKtD,KAAI,SAAChB,EAAK/B,GAAO,OACrB,eAAC,KAAKoD,KAAN,CAEC5Q,UAAW6D,IAAW0L,EAAIuE,OAAQ,gCAAiC,GACnEjD,QAAS,kBAAMsD,EAAe5E,EAAIuE,SAHnC,SAKC,wBAAM9T,UAAU,oDAAhB,UACC,iCACC,sBAAKkQ,MAAO,CAAC+D,SAAU,QAAS3B,IAAG,qBAAgB/C,EAAI3F,KAApB,QAAgC2I,IAAKhD,EAAIyE,WAC5E,uBAAMhU,UAAU,0BAAhB,SAA2CuP,EAAIyE,cAE/CnQ,IAAW0L,EAAIuE,OAAQ,eAACQ,GAAA,EAAD,CAAetU,UAAU,iBAAoB,SATjEwN,QAgBV,OACC,eAAC,KAAD,CAAUiF,UAAU,cAAc8B,QAASF,EAAgBG,QAAS,CAAC,SAArE,SAEEJ,EAEC,oBAAGK,KAAK,KAAKzU,UAAU,YAAY6Q,QAAS,SAAA6D,GAAC,OAAIA,EAAEC,kBAAnD,SACC,eAAC,GAAD,CAAkB9Q,OAAQA,MAK3B,eAAC,KAAD,CAAMoM,KAAK,aAAX,SACC,eAAC,KAAKW,KAAN,UACC,oBAAG6D,KAAK,KAAK5D,QAAS,SAAA6D,GAAC,OAAIA,EAAEC,kBAA7B,SACC,eAACC,GAAA,EAAD,CAAgB5U,UAAU,qBAFb,mB,UC9Bf6U,GAAe,CACpB,UACA,UACA,UACA,UACA,WAGKC,GAAa,SAAC,GAAD,IAAEpK,EAAF,EAAEA,KAAMqK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,SAA5B,OAClB,uBAAKjV,UAAS,eAAUiV,EAAU,GAAK,qDAAvC,UACC,sBAAKjV,UAAS,UAAKgV,EAAW,cAAgB,GAAhC,YAAsCC,EAAU,OAAS,IAAvE,SAA8EvK,IAC9E,+BAAMqK,QAwKFG,GAAqB,CAC1B1G,sBACA2G,gBT/KM,SAAyBrR,GAC9B,MAAO,CACLf,KAAMI,EACNW,YS6KHsR,iBT9LM,SAA0BxR,GAC/B,MAAO,CACLb,KAAMG,EACNU,iBS4LHyR,oBT1KM,SAA6BtR,GAClC,MAAO,CACLhB,KAAMK,EACNW,gBSwKHuR,uBTpKM,SAAgCtR,GACrC,MAAO,CACLjB,KAAMM,EACNW,mBSkKHuR,cTvJM,SAAuBrR,GAC5B,MAAO,CACLnB,KAAMQ,EACNW,iBSqJHsR,kBTjJM,SAA2BrR,GAChC,MAAO,CACLpB,KAAMS,EACNW,eSiJW+M,gBAfS,SAAC,GAAe,IAAbxN,EAAY,EAAZA,MAEzB,MAAO,CAAEI,QADsGJ,EAAvGI,QACUF,aAD6FF,EAA9FE,aACeD,aAD+ED,EAAhFC,aACeI,YADiEL,EAAlEK,YACcC,eADoDN,EAArDM,eACiBH,OADoCH,EAArCG,OACSK,aAD4BR,EAA7BQ,aACeC,UADcT,EAAfS,aAc1D+Q,GAAzBhE,EA9KkB,SAAC,GAgB3B,IAoCsBuE,EAnD5B3R,EAeK,EAfLA,QACAF,EAcK,EAdLA,aACAD,EAaK,EAbLA,aACAI,EAYK,EAZLA,YACAC,EAWK,EAXLA,eACAH,EAUK,EAVLA,OACAK,EASK,EATLA,aACAsK,EAQK,EARLA,mBACA2G,EAOK,EAPLA,gBACAC,EAMK,EANLA,iBACAC,EAKK,EALLA,oBACAC,EAIK,EAJLA,uBACAC,EAGK,EAHLA,cACApR,EAEK,EAFLA,UACAqR,EACK,EADLA,kBAEMvD,EAAWnO,IAAY3C,KACvBuU,EAAa/R,EAEnB,EAA6BgS,8BAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAkClB,OACC,uCACC,uBAAK7V,UAAU,OAAf,UACC,qBAAIA,UAAU,wBAAd,wBAECiS,EACA,eAAC,GAAD,CACCvH,KAAK,iBACLuK,UAAQ,EACRF,SACC,eAAC,GAAD,CAAalJ,MAAO9H,EAAaiP,YAnCZ,SAACjF,GAC3BuH,EAAuB,IACvB,IAAQ5B,EAAQ3F,EAAR2F,IACFnH,EAAI,eAAWmH,EAAI5G,EAAf,aAAqB4G,EAAI3G,EAAzB,aAA+B2G,EAAI1G,EAAnC,aAAyC0G,EAAI1N,EAA7C,KACJqF,EAAMwE,GAAMiG,UAAUvJ,GAC5B8I,EAAoBhK,QAkCjB,eAAC,GAAD,CACCX,KAAK,oBACLuK,UAAQ,EACRF,SACC,eAAC,GAAD,CAAalJ,MAAO7H,EAAgBgP,YApCZ,SAACjF,GAC9B,IAAQ2F,EAAQ3F,EAAR2F,IACFnH,EAAI,eAAWmH,EAAI5G,EAAf,aAAqB4G,EAAI3G,EAAzB,aAA+B2G,EAAI1G,EAAnC,aAAyC0G,EAAI1N,EAA7C,KACJqF,EAAMwE,GAAMiG,UAAUvJ,GAC5B+I,EAAuBjK,QAqCrB,eAAC,GAAD,CACCX,KAAK,mBACLqK,SACC,gBAAC,KAAMgB,MAAP,CACCC,KAAK,QACLvC,SAAU,SAAAiB,GAAC,OAvCO3G,EAuCY2G,EAAEuB,OAAOlI,MAtC5CuH,EAAuB,IACpBvH,IAAU5M,OACZkU,EAAoBR,GAAa,IACjCrG,GAAmB,SAEpB2G,EAAgBpH,GANM,IAACA,GAwClBA,MAAOjK,EAHR,UAKC,eAAC,KAAMoS,OAAP,CAAcnI,MAAO7M,KAArB,kBACA,eAAC,KAAMgV,OAAP,CAAcnI,MAAO5M,KAArB,sBAIH,eAAC,GAAD,CACCuJ,KAAK,kBACLqK,SACC,gBAAC,KAAMgB,MAAP,CACCf,SAAU/C,EACV+D,KAAK,QACLvC,SAAU,SAAAiB,GAAC,OAAIU,EAAiBV,EAAEuB,OAAOlI,QACzCA,MAAOnK,EAJR,UAMC,eAAC,KAAMsS,OAAP,CAAcnI,MAAO/M,KAArB,mBACA,eAAC,KAAMkV,OAAP,CAAcnI,MAAO9M,KAArB,qBAGF+T,SAAU/C,IAEX,eAAC,GAAD,CACCvH,KAAK,qBACLqK,SACC,eAAC,KAAD,CACCC,SAAU/C,EACVkE,QAAST,EACTjC,SAAU,kBAAMjF,GAAoB7K,MAGtCqR,SAAU/C,IAEX,eAAC,GAAD,CACCvH,KAAK,cACLqK,SACC,eAAC,KAAD,CAAQoB,QAA0B,SAAjBjS,EAAyBuP,SAjG3B,SAAC2C,GACpBd,EAAuB,IACvB,IAAMe,EAAeD,EAAY,OAAS,QAC1Cb,EAAcc,GACZT,EAAS,CAAElS,MAAOmS,EAAOQ,UAgGzB,eAAC,GAAD,CACC3L,KAAK,aACLqK,SACC,gBAAC,KAAMgB,MAAP,CACCC,KAAK,QACLvC,SAAU,SAAAiB,GAAC,OAAIc,EAAkBd,EAAEuB,OAAOlI,QAC1CA,MAAO5J,EAHR,UAKC,eAAC,KAAM+R,OAAP,CAAcnI,MAAO3M,KAArB,iBACA,eAAC,KAAM8U,OAAP,CAAcnI,MAAO1M,KAArB,yBAKJ,uBAAKrB,UAAU,OAAf,UACC,qBAAIA,UAAU,wBAAd,oBACA,eAAC,GAAD,CACC0K,KAAK,YACLqK,SACC,eAAC,GAAD,CAAaX,eAAa,SAI7B,+BACC,eAAC,KAAD,CACCkC,MA/FwBb,EA+FC,CAAE3R,UAASF,eAAcD,eAAcI,cAAaC,iBAAgBH,SAAQK,eAAcC,aA/F3EoS,KAAKC,UAAUf,EAAa,KAAM,IAgG1EgB,OAAQ,kBAAMnU,KAAQoU,QAAQ,qFAF/B,SAIC,eAAC,KAAD,CAAQ9M,KAAM,eAAC+M,GAAA,EAAD,IAAmBC,OAAK,EAAtC,SACC,6DC1LOC,GAAb,+MACChU,MAAQ,CAAE8P,SAAS,GADpB,EAGEmE,WAAa,WACX,EAAKC,SAAS,CACZpE,SAAS,KALf,EASEH,QAAU,WACR,EAAKuE,SAAS,CACZpE,SAAS,KAXf,6CAeC,WACC,OACI,uCACE,eAAC,KAAD,CAAM1C,KAAK,aAAX,SACE,eAAC,KAAKW,KAAN,CAAuBC,QAASzH,KAAK0N,WAArC,SACE,6BAAG,eAACE,GAAA,EAAD,CAAiBhX,UAAU,qBADjB,WAIjB,eAAC,KAAD,CACE2J,MAAM,eACN8I,UAAWrJ,KAAKtJ,MAAMqE,YAAc9C,KAAU,OAAS,QACvDgQ,MAAO,IACPmB,QAASpJ,KAAKoJ,QACdG,QAASvJ,KAAKvG,MAAM8P,QALtB,SAOE,eAAC,GAAD,aA9BV,GAA8BpJ,aA0Cf2H,gBALS,SAAC,GAEvB,MAAO,CAAErN,OAF4B,EAAZH,MACjBG,UAIKqN,CAAyB2F,I,+ECvBxC,IAAMI,GAbN,SAASC,EAAeC,EAAgBC,GACvCA,EAAaA,GAA0B,GADY,qBAE5BD,GAF4B,IAEnD,2BAAwC,CAAC,IAA7BE,EAA4B,QACT,IAA3BA,EAAQtN,QAAQqC,QAClBgL,EAAW7I,KAAK8I,GAEdA,EAAQtN,QAAQqC,OAAS,GAC3B8K,EAAcG,EAAQtN,QAASqN,IAPkB,8BAUnD,OAAOA,EAGWF,CAAc1M,IAE3B8M,GAAkB,SAAAC,GACvB,OAAQA,GACP,IAAK,aACJ,OAAO,eAACpN,GAAA,EAAD,CAAmBnK,UAAU,iBACrC,IAAK,OACJ,OAAO,eAACwX,GAAA,EAAD,CAAkBxX,UAAU,gBACpC,IAAK,aACJ,OAAO,eAACyX,GAAA,EAAD,CAAmBzX,UAAU,iBACrC,IAAK,QACJ,OAAO,eAAC0X,GAAA,EAAD,CAAkB1X,UAAU,iBACpC,QACC,OAAO,OAqEK2X,GA7CK,SAAA7X,GACnB,IAAQ8X,EAAkC9X,EAAlC8X,OAAQC,EAA0B/X,EAA1B+X,MAAOjI,EAAmB9P,EAAnB8P,SAAUK,EAASnQ,EAATmQ,KACjC,EAA0BgD,mBAAS,IAAnC,oBAAOlF,EAAP,KAAc+J,EAAd,KACA,EAA8B7E,mBAAS,IAAvC,oBAAO8E,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,MAuBxB,OAJGN,GAHFK,EAASE,QAAQC,QAQjB,eAAC,KAAD,CACCC,IAAKJ,EACLjY,UAAS,2BAAsB4P,EAAU,YAAc,GAA9C,YAA6D,UAATK,EAAmB,QAAU,IAC1FqI,kBAAkB,sBAClBP,QAASA,EACTQ,SA3Be,WAChBT,EAAS,IACTE,EAAW,IACRH,GACFA,KAwBAW,SApBe,SAAApK,GAChB0J,EAAS1J,GACT4J,EAAY5J,EApCa6I,GAAW1G,KAAI,SAACrC,GAC1C,IAAMqJ,EAAWrJ,EAAKzE,IAAIoD,MAAM,KAAK,GACrC,MAAO,CACNkB,MAAOG,EAAKxE,KACZ+O,MACC,eAAC,KAAD,CAAM3H,GAAI5C,EAAKxE,KAAf,SACC,uBAAK1J,UAAU,mBAAf,UACC,sBAAKA,UAAU,OAAf,SACEsX,GAAgBC,KAElB,iCACC,sBAAKvX,UAAU,uBAAf,SAAsC,eAAC,GAAD,CAAaiP,GAAIf,EAAKvE,UAC5D,uBAAK3J,UAAU,0BAAf,UAA0CuX,EAA1C,mBAwBqB,KAmBxBxJ,MAAOA,EACP2K,aAAc,SAACC,EAAYC,GAAb,OACqD,IAAlEA,EAAO7K,MAAMhD,cAAc6B,QAAQ+L,EAAW5N,gBAThD,SAYC,eAAC,KAAD,CAAO8N,YAAY,YAAaC,OAAQ,eAACC,GAAA,EAAD,CAAgB/Y,UAAU,cC1EtDkR,gBALS,SAAC,GAEvB,MAAO,CAAElN,eAF4B,EAAZN,MACjBM,kBAI8B,GAAzBkN,EArBU,SAACpR,GACzB,IAAQ8X,EAAkC9X,EAAlC8X,OAAQC,EAA0B/X,EAA1B+X,MAAO7T,EAAmBlE,EAAnBkE,eACjBiM,EAAOJ,GAAM2B,iBAAiBxN,GAEpC,OACC,uBAAKhE,UAAS,qBAAgB4X,EAAS,oBAAsB,GAA/C,YAAqD3H,GAAQC,MAAO,CAACc,gBAAiBhN,GAApG,UACC,sBAAKhE,UAAU,kCAAf,SACC,eAAC,GAAD,CAAa6X,MAAOA,EAAOD,OAAQA,MAEpC,sBAAK5X,UAAU,YAAY6Q,QAASgH,EAApC,SACC,eAACmB,GAAA,EAAD,YCPIC,GAAW7H,KAAX6H,OA2EO/H,gBALS,SAAC,GAAe,IAAbxN,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aAD8ED,EAA/EC,aACeG,QADgEJ,EAAjEI,QACUE,eADuDN,EAAxDM,eACiBC,UADuCP,EAAxCO,UACYC,aAD4BR,EAA7BQ,aACeC,UADcT,EAAfS,aAIlC,CAACqK,sBAAoBC,sBAA9CyC,EAzEU,SAAApR,GACvB,IAAQ6D,EAA+H7D,EAA/H6D,aAAcM,EAAiHnE,EAAjHmE,UAAWH,EAAsGhE,EAAtGgE,QAASE,EAA6FlE,EAA7FkE,eAAgBwK,EAA6E1O,EAA7E0O,mBAAoBC,EAAyD3O,EAAzD2O,kBAAmBmB,EAAsC9P,EAAtC8P,SAAU1L,EAA4BpE,EAA5BoE,aAAcC,EAAcrE,EAAdqE,UACzH,EAAwC8O,oBAAS,GAAjD,oBAAOiG,EAAP,KAAqBC,EAArB,KAEMC,EAAgB,WACpBD,GAAgB,IAWZlH,EAAWnO,IAAY3C,KAOvBkY,EALArV,EAGG6L,GAAM2B,iBAAiBxN,GAFrB6L,GAAM2B,iBAAkC,SAAjBtN,EAA0B,SAAW,WAsBvE,OANAqP,qBAAU,WACJ3D,GACFwJ,OAKF,eAACH,GAAD,CAAQjZ,UAAS,qBAAgBqZ,GAAWnJ,MAAO,CAACc,gBAAiBhN,GAArE,SACE,uBAAKhE,UAAS,6BAAwBiS,EAAW,iBAAmB,IAApE,UACE,eAAC,GAAD,CAAMG,SAAUiH,IAChB,uBAAKrZ,UAAU,MAAMkQ,MAAO,CAACmB,MAAM,eAAD,OApBnCY,GAAYrC,EACN,MAGD,GAAN,OADCjM,EACS5C,KAEAD,KAFV,MAgBoC,MAAlC,UACE,sBAAKd,UAAU,WAAf,SACE,qBAAIA,UAAU,6CAAd,SAEIiS,IAAarC,EACb,KAEA,qBAAI5P,UAAU,yCAAyC6Q,QAAS,WA3CxEjB,EAGFnB,GAAmBxK,GAFnBuK,GAAoB7K,IA0CV,SACGA,GAAgBiM,EAAW,eAAC0J,GAAA,EAAD,CAAoBtZ,UAAU,aAAgB,eAACuZ,GAAA,EAAD,CAAkBvZ,UAAU,mBAK9G,sBAAKA,UAAU,YAAf,SACE,eAAC,GAAD,CAAUmE,UAAWA,MAEvB,eAAC,GAAD,CAAWyT,OAAQsB,EAAcrB,MAAOuB,e,UCpE9CI,GAAiB,CACpB,OAAS,eAAC,GAAD,CAAavK,GAAG,UAG1BzE,GAAiB8C,SAAQ,SAACiC,EAAK/B,GAC9B,IAAMiM,EAAmB,SAACC,GAAD,OAASF,GAAeE,EAAIhQ,MAAQ,eAAC,GAAD,CAAauF,GAAIyK,EAAI/P,SAClF8P,EAAiBlK,GACbA,EAAIxF,SACPwF,EAAIxF,QAAQuD,SAAS,SAAAiC,GACpBkK,EAAiBlK,GACdA,EAAIxF,SACNwF,EAAIxF,QAAQuD,SAAS,SAAAiC,GACpBkK,EAAiBlK,YAOtB,IAAMoK,GAAkBC,cAAW,SAAA9Z,GAClC,IACM+Z,EADe/Z,EAAbga,SACsBC,SAASlN,MAAM,KAAKoB,QAAO,SAAAT,GAAC,OAAIA,KACxDwM,EAAkBH,EAAatJ,KAAI,SAAC0J,EAAG3K,GAC1C,IAAM4K,EAAG,WAAOL,EAAaM,MAAM,EAAG7K,EAAQ,GAAG7B,KAAK,MACtD,OACE,eAAC,KAAWmD,KAAZ,UACE,eAAC,KAAD,CAAME,GAAIoJ,EAAV,SAAgBV,GAAeU,MADXA,MAM1B,OACA,eAAC,KAAD,UACEF,OAaWI,GARf,gKACC,WACC,OACC,eAACT,GAAD,QAHH,GAAmCpQ,aC1BpB8Q,GAdW,SAAC,GAAwB,IAAtB1Q,EAAqB,EAArBA,MAC5B,OADiD,EAAd2Q,QAGjC,uBAAKta,UAAU,kBAAf,UACC,qBAAIA,UAAU,iCAAd,SACC,eAAC,GAAD,CAAaiP,GAAItF,GAAe,WAEjC,eAAC,GAAD,OAGA,MCXW,SAAS4Q,KACvB,OACC,yBAAQva,UAAU,SAAlB,SACC,iEAA6B,IAAIwa,MAAOC,eAAxC,IAAyD,uBAAMza,UAAU,uBAAhB,mBAA2CM,OAApG,6BCDI,IAAMoa,GAAW,WACtB,OACE,eAAC,WAAD,CAAUC,SAAU,eAAC,GAAD,CAAS7I,MAAM,YAAnC,SACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOpI,KAAI,UAAKhJ,IAAL,cAAkCka,UAAWC,gBAAK,kBAAM,0DACnE,eAAC,KAAD,CAAOnR,KAAI,UAAKhJ,IAAL,SAA6Bka,UAAWC,gBAAK,kBAAM,+EAC9D,eAAC,KAAD,CAAOnR,KAAI,UAAKhJ,IAAL,cAAkCka,UAAWC,gBAAK,kBAAM,+EACnE,eAAC,KAAD,CAAOnR,KAAI,UAAKhJ,IAAL,aAAiCka,UAAWC,gBAAK,kBAAM,gFAClE,eAAC,KAAD,CAAOnR,KAAI,UAAKhJ,IAAL,UAA8Bka,UAAWC,gBAAK,kBAAM,+EAC/D,eAAC,KAAD,CAAOnR,KAAI,UAAKhJ,IAAL,UAA8Bka,UAAWC,gBAAK,kBAAM,+EAC/D,eAAC,KAAD,CAAOnR,KAAI,UAAKhJ,IAAL,aAAiCka,UAAWC,gBAAK,kBAAM,gFAClE,eAAC,KAAD,CAAOnR,KAAI,UAAKhJ,IAAL,SAA6Bka,UAAWC,gBAAK,kBAAM,+EAC9D,eAAC,KAAD,CAAOnR,KAAI,UAAKhJ,IAAL,UAA8Bka,UAAWC,gBAAK,kBAAM,+EAC/D,eAAC,KAAD,CAAOnR,KAAI,UAAKhJ,IAAL,WAA+Bka,UAAWC,gBAAK,kBAAM,oCAChE,eAAC,KAAD,CAAUC,KAAI,UAAKpa,KAAmBoQ,GAAE,UAAKpQ,IAAL,sBAMjC2I,OAAM0R,KAAKL,ICElBM,GAAY5J,KAAZ4J,QACApM,GAAkBC,KAAlBD,cAEKqM,GAAY,SAAC,GAAoD,IAAlDtX,EAAiD,EAAjDA,aAAcG,EAAmC,EAAnCA,QAASgW,EAA0B,EAA1BA,SAAU3V,EAAgB,EAAhBA,UACrD+W,EAAmBrL,GAAMzE,aAAaZ,GAAkBsP,EAASC,UAEjEnK,GADUC,GAAMC,cAAclB,MACVmB,SAAS,MAC7BoL,EAAYrX,IAAY5C,KACxB+Q,EAAWnO,IAAY3C,KACvBia,EAAkB,WACtB,OAAGnJ,GAAYrC,EACN,EAEFjM,EAAe5C,KAA2BD,MAKnD,GAAe,YAFI6U,8BAAX0F,OAGN,OAAO,eAAC,GAAD,CAASvJ,MAAM,SAaxB,OACE,gBAAC,KAAD,WACE,eAAC,GAAD,CAAWlC,SAAUA,IACnBqC,IAAarC,EAAY,eAAC,GAAD,CAAQH,UAAWyL,IAAsB,KACpE,gBAAC,KAAD,CAAQlb,UAAU,gBAAlB,UACImb,IAAcvL,EAAY,eAAC,GAAD,CAASH,UAAWyL,IAAsB,KACtE,gBAAC,KAAD,CAAQlb,UAAU,aAAakQ,MAfhC/L,IAAc/C,KACR,CAACka,YAAaF,KAEpBjX,IAAc9C,KACR,CAACka,aAAcH,KAEjB,CAACE,YAAaF,KASjB,UACE,uBAAKpb,UAAS,sBAAiBiS,EAAW,iBAAmB,IAA7D,UACE,eAAC,GAAD,CAAYqI,QAAO,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAkBpR,WAAYH,MAAK,OAAEuR,QAAF,IAAEA,OAAF,EAAEA,EAAkBvR,QAC5E,eAACqR,GAAD,UACE,eAAC,GAAD,SAGJ,eAACT,GAAD,UAGH3K,GAAY,eAAC,GAAD,QAUJsB,gBALS,SAAC,GAAe,IAAbxN,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aADkCD,EAAnCC,aACeG,QADoBJ,EAArBI,QACUD,OADWH,EAAZG,UAIlBqN,CAAyB7H,IAAM0R,KAAKE,KC9DpCP,GAlBS,WACtB,OACE,eAAC,WAAD,CAAUC,SAAU,eAAC,GAAD,CAAS7I,MAAM,SAAnC,SACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOpI,KAAI,UAAK/I,IAAL,UAA+Bia,UAAWC,gBAAK,kBAAM,wEAChE,eAAC,KAAD,CAAOnR,KAAI,UAAK/I,IAAL,YAAiCia,UAAWC,gBAAK,kBAAM,+EAClE,eAAC,KAAD,CAAOnR,KAAI,UAAK/I,IAAL,YAAiCia,UAAWC,gBAAK,kBAAM,wEAClE,eAAC,KAAD,CAAOnR,KAAI,UAAK/I,IAAL,eAAoCia,UAAWC,gBAAK,kBAAM,+EACrE,eAAC,KAAD,CAAOnR,KAAI,UAAK/I,IAAL,eAAoCia,UAAWC,gBAAK,kBAAM,wEACrE,eAAC,KAAD,CAAOnR,KAAI,UAAK/I,IAAL,oBAAyCia,UAAWC,gBAAK,kBAAM,iEAC1E,eAAC,KAAD,CAAOnR,KAAI,UAAK/I,IAAL,YAAiCia,UAAWC,gBAAK,kBAAM,oCAClE,eAAC,KAAD,CAAOnR,KAAI,UAAK/I,IAAL,YAAiCia,UAAWC,gBAAK,kBAAM,oCAClE,eAAC,KAAD,CAAUC,KAAI,UAAKna,KAAoBmQ,GAAE,UAAKnQ,IAAL,kBCFlC6a,GAXW,WACzB,OACC,sBAAKxb,UAAU,iBAAf,SACC,eAAC,KAAD,UACC,eAAC,KAAD,CAAO0J,KAAK,GAAGkR,UAAWa,U,oBCEfC,GAPA,CACbC,KAAMC,KACN/X,OAAQ,QACRgY,SAAS,eACJC,K,oBCGQC,GAPA,CACbJ,KAAMK,KACNnY,OAAQ,KACRgY,SAAS,eACJI,K,oBCGQC,GAPA,CACbP,KAAMQ,KACNtY,OAAQ,QACRgY,SAAS,eACJO,K,oBCKQC,GAPG,CACdC,GAAIC,GACJC,GAAIC,GACJC,GAAIC,GACJC,GCNW,CACbjB,KAAMkB,KACNhZ,OAAQ,QACRgY,SAAS,eACJiB,M,mBCLDC,GAAe,SAAA/c,GAAS,OAAIgd,SAASC,KAAKC,UAAUC,IAAInd,IACxDod,GAAkB,SAAApd,GAAS,OAAIgd,SAASC,KAAKC,UAAUG,OAAOrd,ICQpE,SAASsd,GAAT,GAAmE,IAAvCvd,EAAsC,EAAtCA,SAAUwd,EAA4B,EAA5BA,gBAAoBC,EAAQ,+CAChE,OACE,eAAC,KAAD,2BACMA,GADN,IAEEC,OAAQ,gBAAG3D,EAAH,EAAGA,SAAH,OACNyD,EACExd,EAEA,eAAC,KAAD,CACE+Q,GAAI,CACFiJ,SAAUpZ,IACVkC,MAAO,CAAEiY,KAAMhB,UAStB,IAgCQF,gBAAW1I,aANF,SAAC,GAAqB,IAAnBxN,EAAkB,EAAlBA,MAAOd,EAAW,EAAXA,KAGhC,MAAO,CAAEiB,OAFsBH,EAAvBG,OAESM,UAFcT,EAAfS,UAEY1B,MADVG,EAAVH,SAIgByO,EAhCL,SAACpR,GACpB,ID3BmCE,EC2B3B6D,EAAuC/D,EAAvC+D,OAAQpB,EAA+B3C,EAA/B2C,MAAOqX,EAAwBha,EAAxBga,SAAU3V,EAAcrE,EAAdqE,UAC3BuZ,EAAmBrB,GAAUxY,GAEnC,OD9BmC7D,EC6BtB,OAAD,OAAQmE,GD5BlBoP,qBACD,WAKC,OAHAvT,aAAqB2d,MAAQ3d,EAAUuQ,IAAIwM,IAAgBA,GAAa/c,GAGjE,WACLA,aAAqB2d,MAAQ3d,EAAUuQ,IAAI6M,IAAmBA,GAAgBpd,MAGjF,CAACA,ICoBA,eAAC,KAAD,CACE6D,OAAQ6Z,EAAiB7Z,OACzBgY,SAAU6B,EAAiB7B,SAF7B,SAGE,eAAC,KAAD,CAAgBhY,OAAQ6Z,EAAiB/B,KAAMxX,UAAWA,EAA1D,SACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOyZ,OAAK,EAAClU,KAAK,IAAlB,SACE,eAAC,KAAD,CAAUoH,GAAIpQ,QAEhB,eAAC,KAAD,CAAOgJ,KAAM/I,IAAb,SACE,eAAC,GAAD,CAAYwD,UAAWA,MAEzB,eAACmZ,GAAD,CAAkB5T,KAAMhJ,IAAiB6c,gBAAiB9a,EAA1D,SACE,eAAC,GAAD,CAAW0B,UAAWA,EAAW2V,SAAUA,iBCvCjDjE,GAAS,CACbgI,KAAK,GAAD,OAAKC,GAAL,uBACJC,MAAM,GAAD,OAAKD,GAAL,yBAmBQE,OAhBf,WACE,OACE,sBAAKhe,UAAU,MAAf,SACE,eAAC,IAAD,CAAUuI,MAAOA,GAAjB,SACE,eAAC,yBAAD,CAAuB0V,SAAUpI,GAAQqI,aAAcrd,IAAaqD,aAAcia,eAAe,yBAAjG,SACE,eAAC,KAAD,UACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAOzU,KAAK,IAAIkR,UAAWwD,gBCTrBC,QACW,cAA7B3V,OAAOoR,SAASwE,UAEe,UAA7B5V,OAAOoR,SAASwE,UAEhB5V,OAAOoR,SAASwE,SAAS1T,MACvB,2D,OCZN2T,IAASd,OAAO,eAAC,GAAD,IAAST,SAASwB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzY,MAAK,SAAA0Y,GACjCA,EAAaC,iB,gCEnInB,8TAuBapX,EAAgB,SAAChF,GAC5B,MAAO,CACLM,KAAMxB,IACNkB,UAIS8D,EAAU,WAErB,OADAmB,QAAQC,IAAI,4CACL,CACL5E,KAAMvB,MAIGqG,EAAiB,WAC5B,MAAO,CACL9E,KAAMtB,MAWGqG,EAAgB,SAACrF,GAC5B,MAAO,CACLM,KAAMpB,IACNc,UAUSsF,EAAgC,SAACtF,GAC5C,MAAO,CACLM,KAAMd,IACNQ,UAUSuF,EAAkC,SAACvF,GAC9C,MAAO,CACLM,KAAMZ,IACNM,UAIS6E,EAAkB,SAAChF,GAC9B,MAAO,CACLS,KAAMnB,IACNU,YAISwc,EAAkB,WAC7B,MAAO,CACL/b,KAAMlB,MAIGkd,EAAc,WACzB,MAAO,CACLhc,KAAMjB,Q","file":"static/js/main.f8c255e4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, DIR_LTR } from 'constants/ThemeConstant';\nimport { env } from './EnvironmentConfig'\n\nexport const APP_NAME = 'EsarCar Admin';\nexport const API_BASE_URL = env.API_ENDPOINT_URL\nexport const APP_PREFIX_PATH = '/app';\nexport const AUTH_PREFIX_PATH = '/auth';\nexport const APP_IMAGE_URL = 'https://s3.ap-south-1.amazonaws.com/esarcar/';\n\nexport const THEME_CONFIG = \n{\n  \"navType\": \"SIDE\",\n  \"sideNavTheme\": \"SIDE_NAV_DARK\",\n  \"navCollapsed\": false,\n  \"topNavColor\": \"#3e82f7\",\n  \"headerNavColor\": \"#151414ff\",\n  \"locale\": \"en\",\n  \"currentTheme\": \"light\",\n  \"direction\": \"ltr\"\n};","const dev = {\n  API_ENDPOINT_URL: 'https://de-api.esarcar.com/api'\n//   API           _ENDPOINT_URL: 'https://de-api.esarcar.com/api'\n};\n\nconst prod = {\n  API_ENDPOINT_URL: 'https://de-api.esarcar.com/api'\n};\n\nconst test = {\n  API_ENDPOINT_URL: 'https://de-api.esarcar.com/api'\n};\n\nconst getEnv = () => {\n\tswitch (process.env.NODE_ENV) {\n\t\tcase 'development':\n\t\t\treturn dev\n\t\tcase 'production':\n\t\t\treturn prod\n\t\tcase 'test':\n\t\t\treturn test\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n\nexport const env = getEnv()\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\t// const signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\t// if (signOutUser === undefined) {\r\n\t\t\t\tconsole.log(\"signout==========\");\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess());\r\n\t\t\t// } else {\r\n\t\t\t// \tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t// }\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { \r\n  DashboardOutlined,\r\n  WindowsOutlined,\r\n  CarOutlined,\r\n  TeamOutlined,\r\n  EuroCircleOutlined,\r\n  SolutionOutlined,\r\n  LogoutOutlined,\r\n  TrophyOutlined ,\r\n  FileDoneOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'dashboard',\r\n  path: `${APP_PREFIX_PATH}/dashboard`,\r\n  title: 'sidenav.menu.dashboard',\r\n  icon: WindowsOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'cars',\r\n  path: `${APP_PREFIX_PATH}/cars`,\r\n  title: 'sidenav.menu.cars',\r\n  icon: CarOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'cars_data',\r\n  path: `${APP_PREFIX_PATH}/cars_data`,\r\n  title: 'sidenav.menu.cars_data',\r\n  icon: FileDoneOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'list_car',\r\n  path: `${APP_PREFIX_PATH}/list_car`,\r\n  title: 'sidenav.menu.list_car',\r\n  icon: FileDoneOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'users',\r\n  path: `${APP_PREFIX_PATH}/users`,\r\n  title: 'sidenav.menu.users',\r\n  icon: TeamOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'trips',\r\n  path: `${APP_PREFIX_PATH}/trips`,\r\n  title: 'sidenav.menu.trips',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'earings',\r\n  path: `${APP_PREFIX_PATH}/earnings`,\r\n  title: 'sidenav.menu.earings',\r\n  icon: EuroCircleOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'role',\r\n  path: `${APP_PREFIX_PATH}/role`,\r\n  title: 'sidenav.menu.role',\r\n  icon: TrophyOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'admin',\r\n  path: `${APP_PREFIX_PATH}/admin`,\r\n  title: 'sidenav.menu.admin',\r\n  icon: SolutionOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'logout',\r\n  path: `${APP_PREFIX_PATH}/logout`,\r\n  title: 'sidenav.menu.logout',\r\n  icon: LogoutOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item key=\"language\">\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tdirection,\r\n\tonDirectionChange\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Direction:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onDirectionChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={direction}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_LTR}>LTR</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_RTL}>RTL</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item key=\"panel\" onClick={this.showDrawer}>\r\n            <a><SettingOutlined className=\"nav-icon mr-0\" /></a>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement={this.props.direction === DIR_RTL ? 'left' : 'right'} \r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme, direction } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel direction={direction} />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/dashboard`} component={lazy(() => import(`./dashboard`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/cars`} component={lazy(() => import(`./cars`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/cars_data`} component={lazy(() => import(`./cars_data`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/list_car`} component={lazy(() => import(`./list_car`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/users`} component={lazy(() => import(`./users`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/trips`} component={lazy(() => import(`./trips`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/earnings`} component={lazy(() => import(`./earnings`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/role`} component={lazy(() => import(`./role`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/admin`} component={lazy(() => import(`./admin`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/logout`} component={lazy(() => import(`./logout`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/dashboard`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if(direction === DIR_LTR) {\r\n      return {paddingLeft: getLayoutGutter()}\r\n    }  \r\n    if(direction === DIR_RTL) {\r\n      return {paddingRight: getLayoutGutter()}\r\n    }\r\n    return {paddingLeft: getLayoutGutter()}\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport useBodyClass from 'hooks/useBodyClass';\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: AUTH_PREFIX_PATH,\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, token, location, direction } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <RouteInterceptor path={APP_PREFIX_PATH} isAuthenticated={token}>\r\n            <AppLayout direction={direction} location={location}/>\r\n          </RouteInterceptor>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale, direction } =  theme;\r\n  const { token } = auth;\r\n  return { locale, direction, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  console.log(\"action++++++++++++++++++++++++++++++++++\")\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}